apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: dp-build-run-
  namespace: dp01-dev
spec:
  serviceAccountName: pipeline
  pipelineRef:
    name: dp-build-run
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: ssh-creds
    secret:
      secretName: dp01-ssh-credentials
  params:
  - name: source-repo-url
    value: git@github.com:odowdaibm/dp01-src.git
  - name: ops-repo-url
    value: git@github.com:odowdaibm/dp01-ops.git
  - name: image-reference
    #value: registry.dev.svc.cluster.local:5000/dp01-dev/dp01:0.0.1
    value: image-registry.openshift-image-registry.svc:5000/dp01-dev/dp01:0.0.1
  - name: storage-driver
    value: vfs
  - name: tls-verify
    value: "false"
  - name: git-user-name
    value: "odowdaibm"
  - name: git-user-email
    value: "a_o-dowd@uk.ibm.com"
  - name: git-script
    value: |
      # install curl and openssl; they are not included in Alpine by default
      apk update && apk add --no-cache curl openssl

      # install kubectl
      curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      chmod +x ./kubectl
      mv ./kubectl /usr/local/bin
      kubectl version --client

      # Move to main branch of datapower source repo to generate Kubernetes artefacts from corresponding source artefacts
      cd $(workspaces.source.path)/repo/main

      # Create datapower admin password; encode as a secret
      kubectl create secret generic admin-secret -n dp01-dev --from-literal=KEY=passw0rd --dry-run=client -o yaml > admin-secret.yaml

      # Create configmaps containing datapower config and local
      kubectl create configmap booking-service-config -n dp01-dev --from-file=$(workspaces.source.path)/repo/main/gateways/gateway01/config/BookingServiceBackend.cfg --dry-run=client -o yaml > booking-service-config.yaml
      tar --directory=$(workspaces.source.path)/repo/main/gateways/gateway01/local/BookingServiceBackend -czvf BookingServiceBackend.tar.gz .
      kubectl create configmap booking-service-local -n dp01-dev --from-file=BookingServiceBackend.tar.gz --dry-run=client -o yaml > booking-service-local.yaml

      # Create key used by Booking service MPGW; encode as secrets
      openssl req -x509 -newkey rsa:4096 -keyout Alice-privkey.pem -out Alice-sscert.pem -sha256 -days 365 -nodes -subj '/CN=dummy.domain.com'
      kubectl create secret generic booking-service-secret1 -n dp01-dev --from-file=Alice-sscert.pem --from-file=Alice-privkey.pem --dry-run=client -o yaml > booking-service-secret1.yaml
      openssl req -x509 -newkey rsa:4096 -keyout BookingApplication-privkey.pem -out BookingApplication-sscert.pem -sha256 -days 365 -nodes -subj '/CN=dummy.domain.com'
      kubectl create secret generic booking-service-secret2 -n dp01-dev --from-file=BookingApplication-privkey.pem --from-file=BookingApplication-sscert.pem --dry-run=client -o yaml > booking-service-secret2.yaml
      openssl enc -aes-256-cbc -pbkdf2 -k secret -P -md sha1 | sed -n "/key/ s/key=//p" > aes256-sharesecret-1.txt
      kubectl create secret generic booking-service-secret3 -n dp01-dev --from-file=aes256-sharesecret-1.txt --dry-run=client -o yaml > booking-service-secret3.yaml

      # Copy fixed YAMLs to datapower gitops repo
      mkdir -p $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01
      cp gateways/gateway01/yamls/gateway.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp gateways/gateway01/yamls/booking-service-ingress.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp gateways/gateway01/yamls/booking-service-service.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp gateways/gateway01/yamls/gateway-webui-service.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.

      # Copy generated kubernetes artefacts to datapower gitops repo
      cp booking-service-local.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp booking-service-config.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp booking-service-secret1.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp booking-service-secret2.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.
      cp booking-service-secret3.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/gateway01/.

      # Admin secret applies to virtual appliance
      cp admin-secret.yaml $(workspaces.source.path)/repo/ops/environments/dev/dp01/.

      # Push changes to GitHub
      cd $(workspaces.source.path)/repo/ops
      git checkout -b main
      git add .
      git commit -s -m "Updated by build pipeline"
      git push origin main
      
      # All done
